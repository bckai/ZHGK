<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DsStruct">

	<resultMap id="dsStruct" type="com.hndfsj.app.device.domain.DsStruct">
		<result property="id" column="id" />
		<result property="dvcId" column="dvcId" />
		<result property="createTime" column="create_time" />
		<result property="dstatus" column="dStatus" />
		<result property="errContent" column="errContent" />
		<result property="transFlag" column="transFlag" />
	</resultMap>

	<select id="dsStructInfo" resultMap="dsStruct">
		SELECT * FROM
		<choose>
			<when test="map.tableSql !=null and map.tableSql.size()>0">
				(
				<foreach item="item" index="index" collection="map.tableSql"
					separator="union">
					select * from ${item.tableName}
				</foreach>
				) as hd_ds_struct
			</when>
			<otherwise>
				hd_ds_struct
			</otherwise>
		</choose>
		where dvcId=#{dvcId} ORDER BY hd_ds_struct.create_time DESC
	</select>

	<select id="deviceRate" resultType="map">
		SELECT count(a.transFlag)
		count, dStatus
		FROM ( SELECT
		CASE WHEN hd_ds_struct.dStatus IS NULL THEN
		'0' ELSE
		hd_ds_struct.dStatus END dStatus,
		CASE WHEN
		hd_ds_struct.transFlag IS
		NULL THEN '0' ELSE hd_ds_struct.transFlag END
		transFlag
		FROM hd_device
		LEFT JOIN hd_ds_struct ON hd_ds_struct.dvcId =
		hd_device.id ) a
		GROUP
		BY a.dStatus ORDER BY a.dStatus
	</select>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,dvcId ,create_time ,dStatus ,errContent ,transFlag 
	    ]]>
	</sql>

	<select id="getAllPage" resultMap="dsStruct">
		SELECT * FROM
		<choose>
			<when test="map.tableSql !=null and map.tableSql.size()>0">
				(
				<foreach item="item" index="index" collection="map.tableSql"
					separator="union">
					select * from ${item.tableName} where create_time >
					#{item.startTime} and create_time &lt; #{item.endTime}
				</foreach>
				) as hd_ds_struct
			</when>
			<otherwise>
				hd_ds_struct
			</otherwise>
		</choose>
		<include refid="Fragment.simpleAndOrCondition" />
		<include refid="Fragment.basicSearchWrap" />
	</select>

	<!--getAll -->
	<select id="getAll" resultMap="dsStruct">
		SELECT * FROM
		<choose>
			<when test="map.tableSql !=null and map.tableSql.size()>0">
				(
				<foreach item="item" index="index" collection="map.tableSql"
					separator="union">
					select * from ${item.tableName}
				</foreach>
				) as hd_ds_struct
			</when>
			<otherwise>
				hd_ds_struct
			</otherwise>
		</choose>
		<include refid="Fragment.simpleAndOrCondition" />
		<include refid="Fragment.basicSearchWrap" />
	</select>
	<!--getColumnsAll -->
	<select id="getColumnsAll" resultType="com.hndfsj.app.device.domain.DsStruct">
		SELECT ${map.columns} FROM hd_ds_struct
		<include refid="Fragment.simpleAndOrCondition" />
		<include refid="Fragment.basicSearchWrap" />
	</select>
	<select id="count" resultType="int">
		SELECT count(*) FROM hd_ds_struct
		<include refid="Fragment.simpleAndOrCondition" />
	</select>

	<select id="getById" resultMap="dsStruct">
		SELECT
		<include refid="columns" />
		 <![CDATA[
	        FROM hd_ds_struct 
	        WHERE 
		        dvcId = #{id} 
	    ]]>
	</select>


	<insert id="insert">
    <![CDATA[
        INSERT INTO ${table} (
        	id ,
        	dvcId ,
        	create_time ,
        	dStatus ,
        	errContent ,
        	transFlag 
        ) VALUES (
			#{id} ,
			#{dvcId} ,
			#{createTime} ,
			#{dstatus} ,
			#{errContent} ,
			#{transFlag} 
        )
    ]]>

	</insert>

	<update id="update">
    <![CDATA[
        UPDATE hd_ds_struct SET
	        dvcId = #{dvcId} ,
	        create_time = #{createTime} ,
	        dStatus = #{dstatus} ,
	        errContent = #{errContent} ,
	        transFlag = #{transFlag} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>


	<delete id="deleteById">
    <![CDATA[
        DELETE FROM hd_ds_struct WHERE
        dvcId = #{dvcId} 
    ]]>
	</delete>

	<select id="getTableCount" resultType="int">
		select count(*) from
		INFORMATION_SCHEMA.TABLES where TABLE_SCHEMA=#{db} and
		TABLE_NAME =
		#{table}
	</select>
	<insert id="insertTable" parameterType="java.lang.String"
		statementType="STATEMENT">
		CREATE TABLE ${table} SELECT * FROM hd_ds_struct where
		1=0
	</insert>
	<select id="isTableExists" resultType="int">
		select 
		<![CDATA[
			count(*) from `INFORMATION_SCHEMA`.`TABLES` where table_name = #{table} and TABLE_SCHEMA = #{db}
		 ]]>
	</select>
</mapper>