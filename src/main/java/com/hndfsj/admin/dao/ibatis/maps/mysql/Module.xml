<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Module">

	<resultMap id="module" type="com.hndfsj.admin.domain.Module">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="superMod" column="superMod" />
		<result property="sortNo" column="sortNo" />
		<result property="isValid" column="isValid" />
		<result property="isLeaf" column="isLeaf" />
		<result property="defaultURL" column="defaultURL" />
	</resultMap>
	<resultMap id="moduleMap" type="com.hndfsj.admin.domain.Module">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="superMod" column="superMod" />
		<result property="sortNo" column="sortNo" />
		<result property="isValid" column="isValid" />
		<result property="isLeaf" column="isLeaf" />
		<association property="resources"  	column="id" select="Resource.getResourceByModuleId"/>
	</resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,name ,superMod ,sortNo ,isValid ,isLeaf ,defaultURL 
	    ]]>
	</sql>


	<!--getAll -->
	<select id="getAll" resultMap="module">
		SELECT * FROM sys_module
		<include refid="Fragment.simpleAndOrCondition" />
		<include refid="Fragment.basicSearchWrap" />
	</select>
	<!--getColumnsAll -->
	<select id="getColumnsAll" resultType="com.hndfsj.admin.domain.Module">
		SELECT ${map.columns} FROM sys_module
		<include refid="Fragment.simpleAndOrCondition" />
		<include refid="Fragment.basicSearchWrap" />
	</select>
	<select id="count" resultType="int">
		SELECT count(*) FROM sys_module
		<include refid="Fragment.simpleAndOrCondition" />
	</select>

	<select id="getById" resultMap="module">
		SELECT
		<include refid="columns" />
		 <![CDATA[
	        FROM sys_module 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>


	<insert id="insert">
    <![CDATA[
        INSERT INTO sys_module (
        	id ,
        	name ,
        	superMod ,
        	sortNo ,
        	isValid ,
        	isLeaf ,
        	defaultURL 
        ) VALUES (
			#{id} ,
			#{name} ,
			#{superMod} ,
			#{sortNo} ,
			#{isValid} ,
			#{isLeaf} ,
			#{defaultURL} 
        )
    ]]>

	</insert>

	<update id="update">
    <![CDATA[
        UPDATE sys_module SET
	        name = #{name} ,
	        superMod = #{superMod} ,
	        sortNo = #{sortNo} ,
	        isValid = #{isValid} ,
	        isLeaf = #{isLeaf} ,
	        defaultURL = #{defaultURL} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>


	<delete id="deleteById">
    <![CDATA[
        DELETE FROM sys_module WHERE
        id = #{id} 
    ]]>
	</delete>
	<!-- getModuleByName -->
	<select id="getModuleByName" resultMap="module">
		select
		id,name,superMod,sortNo,isValid,isLeaf,defaultURL from sys_module
		where name=#{value}
	</select>

	<!--getModuleByParentId -->
	<select id="getModuleByParentId" resultMap="module">
		select id,name,superMod,sortNo,isValid,isLeaf,defaultURL from sys_module
		where superMod = #{value};
	</select>

	<!--getAllModuleResource -->
	<select id="getAllModuleResource" resultMap="moduleMap">
		SELECT * FROM
		sys_module  
		<where>
			<if test="id!=null">
				id = #{id}
			</if>
		</where>
	</select>

	<!--getModIdByUserId -->
	<select id="getModIdByUserId" resultMap="module">
		select distinct modid as
		id,m.name,m.superMod,m.sortNo,m.isValid,m.isLeaf,m.defaultURL from
		(select distinct resId from
		(select resid from sys_re_user_role ur,sys_re_role_resource rr where
		rr.roleid = ur.roleid and ur.userid=#{value}
		union
		SELECT resid FROM sys_re_user_resource where userid=#{value}) t) s
		, sys_resource r,sys_module m where r.id=s.resid and m.id=r.modid and
		m.isValid='1'
	</select>

</mapper>